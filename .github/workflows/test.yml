name: test
on:
  push:
    branches:
      - main

jobs:
  build:
    name: test build on ${{matrix.target.name}}
    runs-on: ${{ matrix.target.host }}
    strategy:
      matrix:
        target:
          - name: osx_arm64
            host: macos-14
            os: osx
            docker: false
          - name: osx_amd64
            host: macos-13
            os: osx
            docker: false
          - name: debian11_arm64
            host: ubuntu-24.04-arm
            os: debian
            docker: true
          - name: debian11_amd64
            host: ubuntu-24.04
            os: debian
            docker: true
          - name: debian12_arm64
            host: ubuntu-24.04-arm
            os: debian
            docker: true
          - name: debian12_amd64
            host: ubuntu-24.04
            os: debian
            docker: true
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup bare-metal
        if: (!matrix.target.docker) && (matrix.target.os == 'osx')
        run: |
          # brew ... ok
          # rust ... ok
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall -y cargo-update
      - name: prepare docker on qemu
        uses: docker/setup-qemu-action@v3
        if: matrix.target.docker
      - name: restore docker image if exist
        id: restore-docker-image
        uses: actions/cache@v4
        with:
          path: .docker
          key: docker+${{matrix.target.name}}+${{ hashFiles(format('cicd/target/{0}/Dockerfile', matrix.target.name)) }}+${{ github.run_id }}
          restore-keys: docker+${{matrix.target.name}}+${{ hashFiles(format('cicd/target/{0}/Dockerfile', matrix.target.name)) }}+
        if: matrix.target.docker
      - name: load docker image if exist
        run: docker load --input .docker/runner.tar
        if: matrix.target.docker && steps.restore-docker-image.outputs.cache-hit
      - name: build and save docker image if not exist
        run: |
          docker build ./cicd/target/${{matrix.target.name}} -t "runner:latest"
          mkdir -p .docker
          docker save --output .docker/runner.tar "runner:latest"
        if: matrix.target.docker && (! steps.restore-docker-image.outputs.cache-hit)
      - name: set build cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/target
          key: cache+${{matrix.target.name}}+${{github.run_id}}
          restore-keys: cache+${{matrix.target.name}}+
      - name: build raw on bare-metal
        run: |
          cicd/maker.sh ${{matrix.target.name}} test
        if: (!matrix.target.docker)
      - name: build raw in docker
        run: |
          docker run --rm -i -v $PWD:/repo runner:latest bash <<'EOF'
          set -xeu
          cd /repo
          cicd/maker.sh ${{matrix.target.name}} test
          EOF
          sudo chown -R "$(id -u $USER):$(id -g $USER)" .
        if: matrix.target.docker
      - name: upload raw
        uses: actions/upload-artifact@v4
        with:
          name: raw+${{ matrix.target.name }}
          path: |
            export/*
