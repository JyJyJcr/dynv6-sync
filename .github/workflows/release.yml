name: release
on:
  push:
    tags:
      - v*
      - p*

jobs:
  configure:
    name: configure
    runs-on: ubuntu-latest
    outputs:
      mode: ${{ startsWith(github.ref,'refs/tags/release/') && 'release' || 'prerelease' }}
      deploy_branch: "publish"
      work_branch: "publish_tmp"
      apt_work_branch: "publish_tmp_apt"
    steps:
      -  run: echo ${{ github.ref }} then ${{ startsWith(github.ref,'refs/tags/release/') && 'deb' || 'deb-unstable' }}

  merge:
    name: merge ${{ github.ref_name }} to ${{ needs.configure.outputs.work_branch }}
    runs-on: ubuntu-latest
    needs:
      - configure
    permissions:
      contents: write
    steps:
      - name: set gitconfig
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.configure.outputs.work_branch }}
          fetch-depth: 0
      - name: reset & merge & push
        run: |
          git reset --hard origin/${{ needs.configure.outputs.deploy_branch }} --
          git merge ${{github.sha}} -m "ci: catch up to ${{github.ref_name}}"
          git push -f https://oauth2:${{ github.token }}@github.com/${{ github.repository }}.git
  build:
    name: release build on ${{matrix.target.name}}
    runs-on: ${{ matrix.target.host }}
    needs:
      - configure
      - merge
    strategy:
      matrix:
        target:
          - name: osx_arm64
            host: macos-14
            os: osx
            docker: false
          - name: osx_amd64
            host: macos-13
            os: osx
            docker: false
          - name: debian11_arm64
            host: ubuntu-24.04-arm
            os: debian
            docker: true
          - name: debian11_amd64
            host: ubuntu-24.04
            os: debian
            docker: true
          - name: debian12_arm64
            host: ubuntu-24.04-arm
            os: debian
            docker: true
          - name: debian12_amd64
            host: ubuntu-24.04
            os: debian
            docker: true
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.configure.outputs.work_branch }}
      - name: setup bare-metal
        if: (!matrix.target.docker) && (matrix.target.os == 'osx')
        run: |
          # brew ... ok
          # rust ... ok
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall -y cargo-update
      - name: prepare docker on qemu
        uses: docker/setup-qemu-action@v3
        if: matrix.target.docker
      - name: restore docker image if exist
        id: restore-docker-image
        uses: actions/cache@v4
        with:
          path: .docker
          key: docker+${{matrix.target.name}}+${{ hashFiles(format('cicd/target/{0}/Dockerfile', matrix.target.name)) }}+${{ github.run_id }}
          restore-keys: docker+${{matrix.target.name}}+${{ hashFiles(format('cicd/target/{0}/Dockerfile', matrix.target.name)) }}+
        if: matrix.target.docker
      - name: load docker image if exist
        run: docker load --input .docker/runner.tar
        if: matrix.target.docker && steps.restore-docker-image.outputs.cache-hit
      - name: build and save docker image if not exist
        run: |
          docker build ./cicd/target/${{matrix.target.name}} -t "runner:latest"
          mkdir -p .docker
          docker save --output .docker/runner.tar "runner:latest"
        if: matrix.target.docker && (! steps.restore-docker-image.outputs.cache-hit)
      - name: set build cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/target
          key: cache+${{matrix.target.name}}+${{github.run_id}}
          restore-keys: cache+${{matrix.target.name}}+
      - name: build release on bare-metal
        run: |
          cicd/maker.sh ${{matrix.target.name}} release
        if: (!matrix.target.docker)
      - name: build release in docker
        run: |
          docker run --rm -i -v $PWD:/repo runner:latest bash <<'EOF'
          set -xeu
          cd /repo
          cicd/maker.sh ${{matrix.target.name}} release
          EOF
          sudo chown -R "$(id -u $USER):$(id -g $USER)" .
        if: matrix.target.docker
      - name: upload .deb files
        uses: actions/upload-artifact@v4
        with:
          name: deb+${{ matrix.target.name }}
          path: |
            export/*
        if: matrix.target.os == 'debian'
  publish_apt:
    name: publish github apt repository
    runs-on: ubuntu-latest
    needs:
      - configure
      - merge
      - build
    environment:
      name: publish_apt
    permissions:
      contents: write
      actions: write
    steps:
      - name: set gitconfig
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.configure.outputs.apt_work_branch }}
          fetch-depth: 0
      - name: reset to ${{ needs.configure.outputs.work_branch }}
        run: |
          git reset --hard origin/${{ needs.configure.outputs.work_branch }} --
      - name: (deb) install reprepro and debsigs
        run: |
          sudo apt-get -y install reprepro debsigs
      - name: (deb) import gpg key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.DEB_GPG_SECRET_KEY }}
      - name: (deb) download deb
        uses: actions/download-artifact@v4
        with:
          pattern: deb+*
          merge-multiple: true
          path: ./
      - name: (deb) build repository
        run: |
          cd publish/${{ needs.configure.outputs.mode == 'release' && 'deb' || 'deb-unstable' }}
          rm -rf pool
          rm -rf dists
          for deb in $(ls ../../ |grep -E '\.deb$');do
            debsigs -k 6DED5B9463CB32337F66CD9D69C07743527D9AFE --sign builder "../../$deb"
            reprepro includedeb "$(cat ../../$deb.codename)" "../../$deb"
          done
          reprepro export
          rm -rf db
          cd -
      - name: (deb) commit
        run: |
          git add ./publish/${{ needs.configure.outputs.mode == 'release' && 'deb' || 'deb-unstable' }}/
          git commit -m "ci: generate debian ${{ needs.configure.outputs.mode == 'release' && 'stable' || 'unstable' }} repository"
      - name: push
        run: git push -f https://oauth2:${{ github.token }}@github.com/${{ github.repository }}.git
  collect:
    name: collect changes to ${{ needs.configure.outputs.work_branch }}
    runs-on: ubuntu-latest
    needs:
      - configure
      - merge
      - publish_apt
    permissions:
      contents: write
    steps:
      - name: set gitconfig
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.configure.outputs.work_branch }}
          fetch-depth: 0
      - name: merge
        run: |
          git merge "origin/${{ needs.configure.outputs.apt_work_branch }}" -m "ci: collect ${{ needs.configure.outputs.apt_work_branch }}"
          git push https://oauth2:${{ github.token }}@github.com/${{ github.repository }}.git
  commit:
    name: sync ${{ needs.configure.outputs.deploy_branch }} to ${{ needs.configure.outputs.work_branch }}
    needs:
      - configure
      - collect
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: set gitconfig
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.configure.outputs.deploy_branch }}
          fetch-depth: 0
      - name: reset & push
        run: |
          git reset --hard origin/${{ needs.configure.outputs.work_branch }} --
          git push https://oauth2:${{ github.token }}@github.com/${{ github.repository }}.git
